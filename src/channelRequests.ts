import { Telegraf, Context } from 'telegraf';

export class ChannelRequestsHandler {
    private bot: Telegraf;
    private channelId: string;

    constructor(bot: Telegraf, channelId: string) {
        this.bot = bot;
        this.channelId = channelId;
    }

    public setupHandlers(): void {
        this.bot.on('chat_join_request', async (ctx) => {
            try {
                const request = ctx.chatJoinRequest;
                console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª:', {
                    userId: request.from.id,
                    channelId: request.chat.id,
                    timestamp: new Date().toISOString()
                });

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–Ω–æ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª
                if (request.chat.id.toString() !== this.channelId) {
                    return;
                }

                // –û–¥–æ–±—Ä—è–µ–º –∑–∞—è–≤–∫—É
                await this.bot.telegram.approveChatJoinRequest(
                    request.chat.id,
                    request.from.id
                );

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π-—Å—Å—ã–ª–∫–æ–π
                await this.bot.telegram.sendMessage(
                    request.from.id,
                    `üîé –Ø –º–æ–≥—É —Ä–∞–∑–¥–µ—Ç—å —Ñ–æ—Ç–æ –ª—é–±–æ–π –¥–µ–≤—É—à–∫–∏!\n\n` +
                    `üí¨ –ñ–º–∏ /start`,
                    {
                        reply_markup: {
                            inline_keyboard: [
                                [
                                    {
                                        text: 'üöÄ /start',
                                        url: 'https://t.me/photowombot?start=ref1941779857'
                                    }
                                ]
                            ]
                        }
                    }
                );

                console.log('–ó–∞—è–≤–∫–∞ –≤ –∫–∞–Ω–∞–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞:', {
                    userId: request.from.id,
                    channelId: request.chat.id,
                    status: 'approved',
                    timestamp: new Date().toISOString()
                });

            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª:', error);
                
                if (ctx.chatJoinRequest?.from.id) {
                    try {
                        await this.bot.telegram.sendMessage(
                            ctx.chatJoinRequest.from.id,
                            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.'
                        );
                    } catch (sendError) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ:', sendError);
                    }
                }
            }
        });
    }
}